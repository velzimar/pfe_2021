{% extends 'base.html.twig' %}

{% block title %}calendar{% endblock %}
{% block  breadcrumb %}
    <ul class="breadcrumb">
        <li class="breadcrumb-item">
            <a href="#">Home</a>
        </li>
        <li class="breadcrumb-item">
            <a href="{{ path('selectUserForService', {'action': 'index_user_service'}) }}">Selectionner un utilisateur</a>
        </li>
        <li class="breadcrumb-item">
            <a href="{{ path('service_index_user', {'userId': user }) }}">Services</a>
        </li>
        <li class="breadcrumb-item">
            <a href="#">Réservation</a>
        </li>
    </ul>

{% endblock %}

{% block body %}

    <style>

        #calendar {
            max-width: 1800px;
            margin: 0 auto;
        }

        .fc-v-event .fc-event-main-frame {
            height: fit-content;
            display: flex;
            flex-direction: column;
        }

    </style>



    {# % do form.slots.setRendered %} #}

    <div class="col-sm-12">
        <div class="element-wrapper">
            <div class="element-box">
                <h5 class="form-header">
                    {{ service.nom }}
                </h5>
                <div class="form-desc">
                    Gestion de réservation
                </div>
                {{ form_start(form) }}

                <h6 class="form-header">
                    Selectionner les horaires disponibles
                </h6>
                <div id='calendar'></div>

                <div class="form-desc">
                </div>
                <div id="active_checkbox">
                    {{ form_row(form.isActive,{
                        'label':"Activer la réservation",
                    }) }}
                </div>
                <div class="form-buttons-w">
                    <div class="row">
                        <div class="col-auto mr-auto">
                            <button class="btn btn-primary " type="submit" onclick="_save()"> Save</button>
                        </div>
                        <div class="col-auto">
                            <button class="btn" type="reset">Annuler</button>
                        </div>
                    </div>
                </div>
            </div>
            {{ form_end(form) }}
        </div>
    </div>

{% endblock %}


{% block javascripts %}
    <script>
        generate_calendar()
        let json_to_send

        $("#active_checkbox").change(function () {
            d = $(this).val();
            //alert(d)
        })

        admin = $("#active_checkbox")
        admin_div = admin.children('div')
        admin_label = admin_div.children("label")
        admin_input = admin_div.children("input[type=checkbox]")
        admin_div.addClass("custom-control custom-checkbox")
        admin_label.addClass("custom-control-label")
        admin_input.addClass("custom-control-input")
        admin_label.before(admin_input)

        var calendar;

        function generate_calendar() {
            //alert("enterer")

            // document.addEventListener('DOMContentLoaded', function () {

            var calendarEl = document.getElementById('calendar');
            calendar = new FullCalendar.Calendar(calendarEl, {
                displayEventTime : false,
                allDaySlot:false,
                height: "auto",
                locale: 'fr',
                navLinks: false,
                monthMode: false,
                expandRows: true,

                headerToolbar: {
                    right: 'timeGridWeek',

                },
                buttonText:{
                    "week":"Semaine"
                },
                slotDuration: '00:15:00',
                initialDate: '2020-09-12',
                selectable: true,
                selectMirror: false,
                eventOverlap: false,
                eventTimeFormat: { // like '14:30:00'
                    hour: '2-digit',
                    minute: '2-digit',
                    second: '2-digit',
                    meridiem: false,hour12: false
                },
                slotMaxTime:"23:45:00",
                dayHeaderFormat: {weekday: 'short'},
                select: function (arg) {

                    // var title = prompt('Event Title:');

                    //  if (title) {
                    var exist = 0
                    $.each(calendar.getEvents(), function (k, v) {
                        //alert('Key = ' + k + '\n' + 'Value = ' + v);
                        if (JSON.stringify(arg.start) === JSON.stringify(v["start"])) {

                            //alert("start1" + JSON.stringify(v["start"]))
                            // alert("start2" + JSON.stringify(arg.start))
                            alert("exist")
                            exist = 1
                        }else if (JSON.stringify(arg.end) === JSON.stringify(v["end"])){
                            alert("exist")
                            exist = 1
                        }else if (JSON.stringify(arg.end) < JSON.stringify(v["end"])  && JSON.stringify(arg.start) > JSON.stringify(v["start"])){
                            alert("exist")
                            exist = 1
                        }else if (JSON.stringify(arg.end) > JSON.stringify(v["end"])  && JSON.stringify(arg.start) < JSON.stringify(v["start"])){
                            alert("exist")
                            exist = 1
                        }

                    });
                    if (!exist) {

                        // import { toDuration } from '@fullcalendar/moment'
                        var a = moment(arg.start.toString("YYYY-MM-DD HH:mm"));
                        var b = moment(arg.end.toString("YYYY-MM-DD HH:mm"));
                        var diffMinutes = b.diff(a, 'minutes')
                       // alert(diffMinutes)

                        var date = moment(arg.start).format('YYYY-MM-DD');
                      //  alert(date)

                        const t = moment(date); // Thursday Feb 2015
                        const dow = t.day();
                     //   alert(dow);

                        if (diffMinutes !== 15) {
                          //  alert(duration_in_minutes)
                            alert("Selectionner seulement un timeslot");
                            return false;
                        }

                        calendar.addEvent({
                            title: " ",
                            start: arg.start,
                            end: arg.end,
                        })
                        _save()
                        //}
                        calendar.unselect()
                    }
                },
                eventClick: function (arg) {
                    if (confirm('Are you sure you want to delete this event?')) {
                        arg.event.remove()
                        _save()
                    }
                },
                editable: false,
                dayMaxEvents: true, // allow "more" link when too many events
                events: [],
                initialView: 'timeGridWeek',
            });
            calendar.render();

            // });
            $(".fc-header-toolbar.fc-toolbar.fc-toolbar-ltr").hide();
        }

        function _save() {
            json_to_send = [[],[],[],[],[],[],[]]
          //  alert(JSON.stringify(calendar.getEvents()))
            //cleaning before sending to controller
            $.each(calendar.getEvents(), function (k, v) {


                var date = moment(v["start"]).format('YYYY-MM-DD');
                const t = moment(date); // Thursday Feb 2015
                var day = t.day();
                //alert(day);

                alert(v["start"])
                var start = moment(v["start"]).format('HH:mm:ss');
                var end = moment(v["end"]).format('HH:mm:ss');
                /*
                alert(day)
                alert(start)
                alert(end)
                */
                json_to_send[day].push({start: start, end: end})
            });
           // alert(JSON.stringify(json_to_send))
            $("#service_calendar_slots").val(JSON.stringify(json_to_send))
        }

    </script>
{% endblock %}