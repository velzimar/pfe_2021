{% extends 'base.html.twig' %}

{% block title %}calendar{% endblock %}
{% block  breadcrumb %}
    <ul class="breadcrumb">
        <li class="breadcrumb-item">
            <a href="#">Home</a>
        </li>
        <li class="breadcrumb-item">
            <a href="{{ path('myServices_new') }}">Mon service</a>
        </li>
        <li class="breadcrumb-item">
            <a href="#">Réservation</a>
        </li>
    </ul>
{% endblock %}

{% block body %}


    <style>



        #calendar {
            max-width: 1800px;
            margin: 0 auto;
        }

        .fc-v-event .fc-event-main-frame {
            height: fit-content;
            display: flex;
            flex-direction: column;
        }
        #loading {
            position:fixed;
            width:100%;
            left:0;right:0;top:0;bottom:0;
            background-color: rgba(255,255,255,0.7);
            z-index:9999;
            display:none;
        }

        @-webkit-keyframes spin {
            from {-webkit-transform:rotate(0deg);}
            to {-webkit-transform:rotate(360deg);}
        }

        @keyframes spin {
            from {transform:rotate(0deg);}
            to {transform:rotate(360deg);}
        }

        #loading::after {
            content:'';
            display:block;
            position:absolute;
            left:48%;top:40%;
            width:40px;height:40px;
            border-style:solid;
            border-color:black;
            border-top-color:transparent;
            border-width: 4px;
            border-radius:50%;
            -webkit-animation: spin .8s linear infinite;
            animation: spin .8s linear infinite;
        }
    </style>



    {# % do form.slots.setRendered %} #}

    <div class="col-sm-12">
        <div class="element-wrapper">
            <div class="element-box">
                <h5 class="form-header">
                    {{ service.nom }}
                </h5>
                <div class="form-desc">
                    Gestion de réservation edit
                </div>
                {{ form_start(form) }}

                <h6 class="form-header">
                    Selectionner les horaires disponibles
                </h6>
                <div id='calendar'></div>

                <div class="form-desc">
                </div>
                <div id="active_checkbox">
                    {{ form_row(form.isActive,{
                        'label':"Activer la réservation",
                    }) }}
                </div>

                <div >
                    {{ form_row(form.slots,{
                        'id':'slots',
                        'label':"Activer la réservation",
                    }) }}
                </div>
                {#
                <div class="form-buttons-w">
                    <div class="row">
                        <div class="col-auto mr-auto">
                            <button class="btn btn-primary " type="submit" onclick="_save()"> Save</button>
                        </div>
                        <div class="col-auto">
                            <button class="btn" type="reset">Annuler</button>
                        </div>
                    </div>
                </div>
                #}
            </div>
            {{ form_end(form) }}
            <div id="loading"></div>
            <div class="modal fade" id="myModalafter" role="dialog">
                <div class="modal-dialog">
                    <!-- Modal content-->
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="modal_title"></h5>
                            <button type="button" class="close" data-dismiss="modal">&times;</button>
                            <div class="form-desc">
                            </div>
                        </div>
                        <div class="modal-header">
                            <h6 class="modal-title" style="color: #047bf8">Liste des clients qui ont réservé à ce moment</h6>
                        </div>
                        <div class="modal-body">
                            <table id="dataTable">
                                <thead>
                                <tr>
                                    <th>Client</th>
                                    <th>Reservation</th>
                                    <th>Status</th>
                                    <th>Téléphone</th>
                                </tr>
                                </thead>
                                <tbody id="tbody_for_after">
                                </tbody>
                            </table>

                        </div>
                        <div class="modal-footer">
                            <div class="row">
                                <button type="button" class="btn btn-warning" >Envoyer des emails d'annulation et appliquer les changements</button>
                            </div>
                            <div class="row">
                                <div class="col-auto">
                                    <button type="button" class="btn btn-outline-dark" >Télécharger cette liste</button></div>
                                <div class="col-auto mr-auto">
                                    <button type="button" class="btn btn-primary" data-dismiss="modal">Ne pas Supprimer ce créneau</button></div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

{% endblock %}


{% block javascripts %}
    <script>
        let table;
        $('#myModalafter').on('hidden.bs.modal', function (e) {
            // do something...
            console.log("hide")
            table.destroy();
        })
        $("#loading").css("display", "none");
        $( document ).ajaxStop(function() {
            $("#loading").css("display", "none");
        });
        $( document ).ajaxStart(function() {
            $("#loading").css("display", "block");
        });
        let responseStatus = "#e65252";

        function getData(start_,end_){
            return $.ajax({
                type: "POST",
                // async: false,
                url: "/workingHours/test",
                data: {start:start_,end:end_},//jQ will sort this out for you
                success: function (response) {

                },
            });
        }

        function saveChanges(){
            let serviceId = '{{ service.id }}';
            console.log(json_to_send)
            console.log(serviceId)
            return $.ajax({
                type: "POST",
                // async: false,
                url: "/workingHours/saveChanges",
                data: {slots: JSON.stringify(json_to_send), service:serviceId},//jQ will sort this out for you
                success: function (response) {
                    console.log(response);
                },
            });
        }

        function reservationsAtThisTime(start,day){
            let serviceId = '{{ service.id }}';
            console.log(start)
            console.log(day)
            console.log(serviceId)
            return $.ajax({
                type: "POST",
                // async: false,
                url: "/workingHours/reservationsAtThisTime",
                data: {start: start, service:serviceId, day:day+1},//jQ will sort this out for you
                success: function (response) {
                    console.log(response);

                },
            });
        }


        function getJSonObject(value) {
            return $.parseJSON(value.replace(/&quot;/ig, '"'));
        }

        var storeJSON = getJSonObject("{{ slots|json_encode() }}");
        var option_names = []
        $.each(storeJSON, function (k, v) {
            //alert('Key = ' + k + '\n' + 'Value = ' + v);
            option_names.push(v)
            $.each(storeJSON[k], function (k, v) {

                //alert(v["start"]+"   "+v["end"])
            });
        });
        //$("#slots").val("["+option_names+"]")
        let json_to_send = option_names
      //  alert(JSON.stringify(json_to_send))

        generate_calendar()
        $("#active_checkbox").change(function () {
            d = $(this).val();
            //alert(d)
        })

        admin = $("#active_checkbox")
        admin_div = admin.children('div')
        admin_label = admin_div.children("label")
        admin_input = admin_div.children("input[type=checkbox]")
        admin_div.addClass("custom-control custom-checkbox")
        admin_label.addClass("custom-control-label")
        admin_input.addClass("custom-control-input")
        admin_label.before(admin_input)

        var calendar;

        function generate_calendar() {
            //alert("enterer")

            // document.addEventListener('DOMContentLoaded', function () {

            var calendarEl = document.getElementById('calendar');
            calendar = new FullCalendar.Calendar(calendarEl, {
                displayEventTime : false,
                allDaySlot:false,
                eventTimeFormat: { // like '14:30:00'
                    hour: '2-digit',
                    minute: '2-digit',
                    second: '2-digit',
                    meridiem: false,hour12: false
                },
                height: "auto",
                locale: 'fr',
                navLinks: false,
                monthMode: false,
                expandRows: true,
                headerToolbar: {
                    right: 'timeGridWeek',

                },
                slotMaxTime:"23:45:00",
                buttonText:{
                    "week":"Semaine"
                },
                slotDuration: '00:15:00',
                initialDate: '2020-09-12',
                selectable: true,
                selectMirror: false,
                eventOverlap: false,

                dayHeaderFormat: {weekday: 'short'},
                select: function (arg) {

                    // var title = prompt('Event Title:');

                    //  if (title) {
                    var exist = 0
                    $.each(calendar.getEvents(), function (k, v) {
                        //alert('Key = ' + k + '\n' + 'Value = ' + v);
                        if (JSON.stringify(arg.start) === JSON.stringify(v["start"])) {

                            //alert("start1" + JSON.stringify(v["start"]))
                            // alert("start2" + JSON.stringify(arg.start))
                            alert("exist1")
                            exist = 1
                        }else if (JSON.stringify(arg.end) === JSON.stringify(v["end"])){
                            alert("exist2")
                            exist = 1
                        }else if (JSON.stringify(arg.end) < JSON.stringify(v["end"])  && JSON.stringify(arg.start) > JSON.stringify(v["start"])){
                            alert("exist3")
                            exist = 1
                        }else if (JSON.stringify(arg.end) > JSON.stringify(v["end"])  && JSON.stringify(arg.start) < JSON.stringify(v["start"])){
                            alert("exist4")
                            exist = 1
                        }

                    });
                    /*
                    if (!exist) {

                        // import { toDuration } from '@fullcalendar/moment'
                        var a = moment(arg.start.toString("YYYY-MM-DD HH:mm"));
                        var b = moment(arg.end.toString("YYYY-MM-DD HH:mm"));
                        var diffMinutes = b.diff(a, 'minutes')
                       // alert(diffMinutes)

                        var date = moment(arg.start).format('YYYY-MM-DD');
                      //  alert(date)

                        const t = moment(date); // Thursday Feb 2015
                        const dow = t.day();
                     //   alert(dow);

                        if (diffMinutes !== 15) {
                          //  alert(duration_in_minutes)
                            alert("Selectionner seulement un timeslot");
                            return false;
                        }

                        calendar.addEvent({
                            title: " ",
                            start: arg.start,
                            end: arg.end,
                        })
                        _save()
                        //}
                        calendar.unselect()
                    }
                    */
                    if(!exist){
                        let start_=moment(arg.start).format('YYYY-MM-DD HH:mm:SS')
                        let end_=moment(arg.end).format('YYYY-MM-DD HH:mm:SS')
                        $.when(getData(start_,end_)).done(function(response){
                            //access response data here
                            console.log('empty');
                            if (response.success && response.result) {
                                responseStatus = "#047bf8";
                            }else{
                                alert("noooo")
                                responseStatus = "#e65252";
                                return false;
                            }

                            // import { toDuration } from '@fullcalendar/moment'
                            var a = moment(arg.start.toString("YYYY-MM-DD HH:mm"));
                            var b = moment(arg.end.toString("YYYY-MM-DD HH:mm"));
                            var diffMinutes = b.diff(a, 'minutes')
                            var date = moment(arg.start).format('YYYY-MM-DD');
                            const t = moment(date); // Thursday Feb 2015
                            const dow = t.day();
                            if (diffMinutes !== 15) {
                                //  alert(duration_in_minutes)
                                alert("Selectionner seulement un timeslot");
                                return false;
                            }
                            calendar.addEvent({
                                color:responseStatus,
                                title: " ",
                                start: arg.start,
                                end: arg.end,
                            })
                            _save()
                            saveChanges()
                            calendar.unselect()
                        });
                    }
                },
                eventClick: function (arg) {
                    //test if there is reservation on this date
                    //console.log(arg.event.start)
                    let start_=moment(arg.event.start).format('YYYY-MM-DD HH:mm:00')
                    let dayNumber = arg.event.start.getDay()
                    console.log(arg.event.start.getDay())
                    //console.log(start_)
                    $.when(reservationsAtThisTime(start_.toLocaleString().substr(11,8),dayNumber)).done(function(response){
                        if(response.result.length === 0){
                            //no reservations
                            arg.event.remove()
                            _save()
                            saveChanges()
                        }else if(response.result.length !== 0){


                            //alert(JSON.stringify(response.result))
                            let str = ""
                            Object.keys(response.result).forEach((reservation)=>{
                                console.log(reservation["client"]);
                                console.log(reservation);
                                    let client = response.result[reservation]["client"]
                                    let id = response.result[reservation]["id"]
                                    let status = response.result[reservation]["status"]
                                    let phone = response.result[reservation]["phone"]
                                    str += "<tr><td>" + client + "</td><td>" + id + "</td><td>" + status + "</td><td>" + phone + "</td></tr>"

                                }
                            )
                            /*
                            $.each(response.result, function (reservation) {
                                let client = reservation["client"]
                                let id = reservation["id"]
                                let status = reservation["status"]
                                let phone = reservation["phone"]
                                str += "<tr><td>" + client + "</td><td>" + id + "</td><td>" + status + "</td><td>" + phone + "</td></tr>"

                            });*/
                            $("#tbody_for_after").html(
                                str
                            )
                            var weekday = ["Dimanche","Lundi","Mardi","Mercredi","Jeudi","Vendredi","Samedi"];

                            $("#modal_title").html(
                                "Créneau horaire à supprimer: "+weekday[arg.event.start.getDay()]+" à " + start_.substr(11,8)
                            )
                            if (str === "") {
                                console.log("Aucun produit dans cette catégorie")
                                return;
                            }
                           // $('#dataTable thead tr').clone(true).appendTo('#dataTable thead');
                            /*
                            $('#dataTable thead tr:eq(1) th').each(function (i) {

                                var title = $(this).text();
                                if (title.search("Nom") !== -1 || title.search("Pri") !== -1) {
                                    $(this).html('<input class="form-control" type="text" />');

                                    $('input', this).on('keyup change', function () {
                                        if (table.column(i).search() !== this.value) {
                                            table
                                                .column(i)
                                                .search(this.value)
                                                .draw();
                                        }
                                    });
                                } else {
                                    $(this).html('<input type="text" hidden/>');

                                }

                            });*/

                            table = $('#dataTable').DataTable({
                                orderCellsTop: true,
                                fixedHeader: true,
                                "dom": '<"top"l>rt<"bottom"ip><"clear">',
                                language: {
                                    url: '//cdn.datatables.net/plug-ins/9dcbecd42ad/i18n/French.json'
                                }
                            });

                            $('#myModalafter').modal('show')























                            //there is reservations
                        }else{
                            //error
                        }
                    });
                    /*
                    if (confirm('Are you sure you want to delete this event?')) {

                        arg.event.remove()
                        _save()
                    }*/
                },
                editable: false,
                dayMaxEvents: true, // allow "more" link when too many events
                events: [],
                initialView: 'timeGridWeek',
            });
            let promises = []
             $.each(json_to_send, function (k, v) {
                //alert("aa")
                $.each(json_to_send[k], function (a, c) {

                   // alert(c["start"]+"   "+c["end"])



                    s = 6+k+""+" "+c["start"]
                    e = 6+k+""+" "+c["end"]

                    if(6+k<10){

                        s="0"+s
                        e="0"+e
                    }

                    //alert("2020-09-"+s)
                    //alert("2020-09-"+e)
                    let startDate = "2020-09-"+s;
                    let endDate = "2020-09-"+e;
                    console.log(startDate)
                    console.log(endDate)
                    request = $.when(getData(startDate,endDate)).done(function(response){
                        //access response data here
                        console.log('empty2');
                        if (response.success && response.result) {
                            console.log('true');
                           // responseStatus = "#047bf8";
                        }else{
                            console.log('false');
                            //alert("noooo")
                            //responseStatus = "#e65252";
                            return false;
                        }

                        // import { toDuration } from '@fullcalendar/moment'
                        var a = moment(startDate/*.toString("YYYY-MM-DD HH:mm")*/);
                        var b = moment(endDate/*.toString("YYYY-MM-DD HH:mm")*/);
                        var diffMinutes = b.diff(a, 'minutes')
                        var date = moment(startDate).format('YYYY-MM-DD');
                        const t = moment(date); // Thursday Feb 2015
                        const dow = t.day();
                        if (diffMinutes !== 15) {
                            //  alert(duration_in_minutes)
                            alert("Selectionner seulement un timeslot");
                            return false;
                        }
                        calendar.addEvent({
                            color:"#24b314",
                            title: " ",
                            start: startDate,
                            end: endDate,
                        })
                        _save()
                        calendar.unselect()
                    })
                    promises.push(request)

                    /*
                    calendar.addEvent({
                        color:"#24b314",
                        title: " ",
                        start: "2020-09-"+s,
                        end: "2020-09-"+e,
                    })
                    */
                })


                //alert(v["start"]+"   "+v["end"])
            });


            $.when.apply(null, promises).done(function(){
                saveChanges()
            })
            calendar.render();

            // });
            $(".fc-header-toolbar.fc-toolbar.fc-toolbar-ltr").hide();
        }

        function _save() {
            json_to_send = [[],[],[],[],[],[],[]]
          //  alert(JSON.stringify(calendar.getEvents()))
            //cleaning before sending to controller
            $.each(calendar.getEvents(), function (k, v) {


                var date = moment(v["start"]).format('YYYY-MM-DD');
                const t = moment(date); // Thursday Feb 2015
                var day = t.day();
                //alert(day);


                var start = moment(v["start"]).format('HH:mm:ss');
                var end = moment(v["end"]).format('HH:mm:ss');
                /*
                alert(day)
                alert(start)
                alert(end)
                */
                json_to_send[day].push({start: start, end: end})
            });
           // alert(JSON.stringify(json_to_send))
            $("#slots").val(JSON.stringify(json_to_send))
        }

    </script>
{% endblock %}